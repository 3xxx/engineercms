{
    "swagger": "2.0",
    "info": {
        "title": "EngineerCMS API",
        "description": "ECMS has every tool to get any job done, so codename for the new ECMS APIs.\n",
        "version": "1.0.0",
        "contact": {
            "email": "504284@qq.com"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/admin/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get admin page\n\u003cbr\u003e",
                "operationId": "AdminController.getAdminBlock",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/admin/category/addcategory": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "Get Category list by title info\n\u003cbr\u003e",
                "operationId": "AdminController.Post Category by pid title code grade",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pid",
                        "description": "parentid of category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "title of category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "code of category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "grade",
                        "description": "grade of category",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddAdminCategory"
                        }
                    }
                }
            }
        },
        "/admin/category/{id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "Get Category list by some info\n\u003cbr\u003e",
                "operationId": "AdminController.Get Category list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "category id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAdminCategory"
                        }
                    }
                }
            }
        },
        "/admin/categorytitle": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "Get Category list by title info\n\u003cbr\u003e",
                "operationId": "AdminController.Get Category by title",
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "description": "title of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAdminCategory"
                        }
                    }
                }
            }
        },
        "/admin/flowaccesscontext": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post AccessContext..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf AccessContext...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of AccessContext",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowaccesscontextlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post AccessContext..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf AccessContext...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of AccessContext",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowaccesscontextupdate": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocaccesscontext..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docaccesscontext...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of docaccesscontext",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowaction": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocaction..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docaction...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of docaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowactiondelete": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocaction..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docaction...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of docaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowactionlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get workflowdocaction..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf docaction...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of docaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowactionupdate": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocaction..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docaction...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of docaction",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowdoc": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post document\n\u003cbr\u003e",
                "operationId": "FlowController.post wf document",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The doctypeid of document",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The accesscontext of document",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The groupid of Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of document",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "data",
                        "description": "The data of document",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowdocevent": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "get docevent\n\u003cbr\u003e",
                "operationId": "FlowController.post wf event",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of event",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowdoceventlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get doceventlist\n\u003cbr\u003e",
                "operationId": "FlowController.get wf eventlist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of event",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowdoclist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get workflow doclist\n\u003cbr\u003e",
                "operationId": "FlowController.get wf doclist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of doc",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowdocumentdetail": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get documentdetail\n\u003cbr\u003e",
                "operationId": "FlowController.get wf document details",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "docid",
                        "description": "The id of doc",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowdocumentlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get document\n\u003cbr\u003e",
                "operationId": "FlowController.get wf document",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The id of accesscontext",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The id of group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dsid",
                        "description": "The id of docstate",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of doc",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit page of doc",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowdocumentlist2": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get document\n\u003cbr\u003e",
                "operationId": "FlowController.get wf document",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The id of accesscontext",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The id of group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dsid",
                        "description": "The id of docstate",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of doc",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit page of doc",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowgroup": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post Group..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf Group...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "grouptype",
                        "description": "The type of Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowgrouplist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post Group..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf Group...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowgroupmailbox": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get groupmailbox\n\u003cbr\u003e",
                "operationId": "FlowController.get group mailbox",
                "parameters": [
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The id of group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of mailbox",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit page of mailbox",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "unread",
                        "description": "The unread of mailbox",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowgrouprole": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post GroupRole..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf GroupRole...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of GroupRole",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowgrouprolelist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get GroupRole..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf GroupRole...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of GroupRole",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowgroupuserslist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post Group..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf GroupUsers...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of GroupUser",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flownext": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflow next\n\u003cbr\u003e",
                "operationId": "FlowController.post wf next",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "daid",
                        "description": "The id of action",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "docid",
                        "description": "The id of document",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The id of group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "text",
                        "description": "The text of apply",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flownode": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post Node..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf Node...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of Node",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The doctypeid of Node",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dsid",
                        "description": "The docstateid of Node",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The accesssid of Node",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nodetype",
                        "description": "The nodetype of Node",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flownodelist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post Node..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf Node...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of Node",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowpermission": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post Permission..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf Permission...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of Permission",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowrole": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post Role..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf Role...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowrolelist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post Role..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf Role...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowrolepermissionlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post Permission..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf Permission...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of Permission",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowstate": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocstate..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docstate...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of docstate",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowstatedelete": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocstate..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docstate...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of docstate",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowstatelist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocstate..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docstate...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of docstate",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowstateupdate": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdocstate..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf docstate...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of docstate",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtransition": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post transition..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf transition...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of transition",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtransitiondelete": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdoctransition..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf doctransition...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of doctransition",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtransitionlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post transition..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf transition...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of transition",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtransitionupdate": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdoctransition..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf doctransition...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of doctransition",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtype": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdoctype..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf doctype...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of doctype",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtypedelete": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdoctype..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf doctype...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of doctype",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtypelist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get workflowdoctype..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf doctypelist...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of doctype",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowtypeupdate": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflowdoctype..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf doctype...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of doctype",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowuser": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post user..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf user...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "firstname",
                        "description": "The firstname of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lastname",
                        "description": "The lastname of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "The email of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "active",
                        "description": "The active of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowusergroup": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post Group..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf GroupUser...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of GroupUser",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowuserlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post user..\n\u003cbr\u003e",
                "operationId": "FlowController.get wf user...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowusermailbox": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get usermailbox\n\u003cbr\u003e",
                "operationId": "FlowController.get user mailbox",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "The id of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of mailbox",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit page of mailbox",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "unread",
                        "description": "The unread of mailbox",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowusermailbox2": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get usermailbox\n\u003cbr\u003e",
                "operationId": "FlowController.get user mailbox",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "The id of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of mailbox",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit page of mailbox",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "unread",
                        "description": "The unread of mailbox",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowworkflow": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post Workflow..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf Workflow...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of Workflow",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The doctypeid of Workflow",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dsid",
                        "description": "The docstate of Workflow",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/flowworkflowlist": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "post Workflow..\n\u003cbr\u003e",
                "operationId": "FlowController.post wf Workflow...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of Workflow",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/getwxprojectconfig": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get wx projectconfig by projectid\n\u003cbr\u003e",
                "operationId": "AdminController.get wx projectconfig by projectid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/admin/jsoneditor": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get wx projectconfig by projectid\n\u003cbr\u003e",
                "operationId": "AdminController.get wx projectconfig by projectid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/admin/liucheng": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get flowchart text\n\u003cbr\u003e",
                "operationId": "FlowController.get flowchart text",
                "parameters": [
                    {
                        "in": "query",
                        "name": "docstate",
                        "description": "The state of document",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/putwxprojectconfig": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "put wx projectconfig by projectid\n\u003cbr\u003e",
                "operationId": "AdminController.update wx projectconfig by projectid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projectconfig",
                        "description": "The json of projectconfig",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/admin/workflow": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "show workflow page\n\u003cbr\u003e",
                "operationId": "FlowController.show wf page",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/admin/wxflowdoc": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post document\n\u003cbr\u003e",
                "operationId": "FlowController.post wf document",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The doctypeid of document",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The accesscontext of document",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The groupid of Group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of document",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of document",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/wxflownext": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "post workflow next\n\u003cbr\u003e",
                "operationId": "FlowController.post wf next",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "daid",
                        "description": "The id of action",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "articleid",
                        "description": "The id of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The id of group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "messageid",
                        "description": "The messageid of doc",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "text",
                        "description": "The text of apply",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/admin/wxflowusermailbox2": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get usermailbox\n\u003cbr\u003e",
                "operationId": "FlowController.get user mailbox",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of mailbox",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit page of mailbox",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "unread",
                        "description": "The unread of mailbox",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/adminlog/errlog": {
            "get": {
                "tags": [
                    "adminlog"
                ],
                "description": "get log list\n\u003cbr\u003e",
                "operationId": "AdminLogController.getAdminBlock",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/adminlog/infolog": {
            "get": {
                "tags": [
                    "adminlog"
                ],
                "description": "get log list\n\u003cbr\u003e",
                "operationId": "AdminLogController.getAdminBlock",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/bbs/bbs": {
            "post": {
                "tags": [
                    "bbs"
                ],
                "description": "post bbs\n\u003cbr\u003e",
                "operationId": "BbsController.post bbs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "description": "The userId for bbs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "desc",
                        "description": "The description for bbs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year for bbs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month for bbs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "day",
                        "description": "The day for bbs",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "bbs not found"
                    }
                }
            }
        },
        "/bbs/bbsgetbbs": {
            "get": {
                "tags": [
                    "bbs"
                ],
                "description": "get bbs\n\u003cbr\u003e",
                "operationId": "BbsController.get checkin bbs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year for bbs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month for bbs",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/bbs/getbbs": {
            "get": {
                "tags": [
                    "bbs"
                ],
                "description": "get bbs\n\u003cbr\u003e",
                "operationId": "BbsController.get bbs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year for bbs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month for bbs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "day",
                        "description": "The day for bbs",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "bbs not found"
                    }
                }
            }
        },
        "/cart/createproductcart": {
            "post": {
                "tags": [
                    "cart"
                ],
                "description": "post create a new cart\n\u003cbr\u003e",
                "operationId": "CartController.post create a new cart",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "The ids of product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/cart/deleteusercart": {
            "post": {
                "tags": [
                    "cart"
                ],
                "description": "post delete a usercart\n\u003cbr\u003e",
                "operationId": "CartController.post delete usercart",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "The ids of usercats",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteUserCart"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/cart/getapplycart": {
            "get": {
                "tags": [
                    "cart"
                ],
                "description": "get usercartlist\n\u003cbr\u003e",
                "operationId": "CartController.get usercartlist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "status",
                        "description": "The status for usercart list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchText",
                        "description": "The searchText of usercart",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page for usercart list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for usercart list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Create"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "cart not found"
                    }
                }
            }
        },
        "/cart/getapprovalcart": {
            "get": {
                "tags": [
                    "cart"
                ],
                "description": "get usercartlist\n\u003cbr\u003e",
                "operationId": "CartController.get usercartlist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "status",
                        "description": "The status for usercart list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchText",
                        "description": "The searchText of usercart",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page for usercart list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for usercart list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Create"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "cart not found"
                    }
                }
            }
        },
        "/cart/getcart": {
            "get": {
                "tags": [
                    "cart"
                ],
                "description": "get usercarttpl\n\u003cbr\u003e",
                "operationId": "CartController.get usercarttpl",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Create"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "cart not found"
                    }
                }
            }
        },
        "/cart/updateapprovalcart": {
            "post": {
                "tags": [
                    "cart"
                ],
                "description": "post update carts\n\u003cbr\u003e",
                "operationId": "CartController.post update carts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "The ids of approvalcats",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Update"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "cart not found"
                    }
                }
            }
        },
        "/chat/avatar/{text}": {
            "get": {
                "tags": [
                    "chat"
                ],
                "description": "get avatar\n\u003cbr\u003e",
                "operationId": "ChatController.get avatar",
                "parameters": [
                    {
                        "in": "path",
                        "name": "text",
                        "description": "The text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Avatar"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Page not found"
                    }
                }
            }
        },
        "/chat/chat": {
            "get": {
                "tags": [
                    "chat"
                ],
                "description": "get chat\n\u003cbr\u003e",
                "operationId": "ChatController.get chat",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserTemple"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Page not found"
                    }
                }
            }
        },
        "/chat/wschat": {
            "get": {
                "tags": [
                    "chat"
                ],
                "description": "get wschat\n\u003cbr\u003e",
                "operationId": "ChatController.get wschat",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetChat"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Page not found"
                    }
                }
            }
        },
        "/checkin/activity/actInfo": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/activity/apply": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/activity/create": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin activity",
                "parameters": [
                    {
                        "in": "query",
                        "name": "CreaterId",
                        "description": "The CreaterId for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Caption",
                        "description": "The Caption for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Desc",
                        "description": "The Desc for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Location",
                        "description": "The Location for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Lat",
                        "description": "The Lat for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Lng",
                        "description": "The Lng for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "SatrtDate",
                        "description": "The SatrtDate for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "EndDate",
                        "description": "The EndDate for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "IfFace",
                        "description": "The IfFace for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "IfPhoto",
                        "description": "The IfPhoto for activity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "IfLocation",
                        "description": "The IfLocation for activity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/activity/getall": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of activity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/activity/haveApply": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/activity/like": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/check": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "activityId",
                        "description": "The activityId of activity",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/check/compare": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/check/details": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/checkgetcheck": {
            "get": {
                "tags": [
                    "checkin"
                ],
                "description": "get check\n\u003cbr\u003e",
                "operationId": "CheckController.get checkin check",
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "description": "The userId for check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "activityId",
                        "description": "The activityid for check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year for check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month for check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/checksignature": {
            "get": {
                "tags": [
                    "checkin"
                ],
                "description": "get Signature\n\u003cbr\u003e",
                "operationId": "CheckController.get Signature",
                "parameters": [
                    {
                        "in": "query",
                        "name": "signature",
                        "description": "The signature of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "timestamp",
                        "description": "The timestamp of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nonce",
                        "description": "The nonce for wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "echostr",
                        "description": "The echostr for wx",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/details/date": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/monthcheck": {
            "get": {
                "tags": [
                    "checkin"
                ],
                "description": "get monthcheck\n\u003cbr\u003e",
                "operationId": "CheckController.get mothcheckin",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "activityId",
                        "description": "The activityid for check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year for check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month for check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/monthchecksum": {
            "get": {
                "tags": [
                    "checkin"
                ],
                "description": "get monthcheck\n\u003cbr\u003e",
                "operationId": "CheckController.get mothcheckin",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/person": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "CheckController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The userId for person",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/sendmessage": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post Message\n\u003cbr\u003e",
                "operationId": "CheckController.post Message",
                "parameters": [
                    {
                        "in": "query",
                        "name": "app_version",
                        "description": "The app_version of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "template_id",
                        "description": "The template_id of Message",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/checkin/subscribemessage": {
            "post": {
                "tags": [
                    "checkin"
                ],
                "description": "post subscribemessage\n\u003cbr\u003e",
                "operationId": "CheckController.post subscribemessage",
                "parameters": [
                    {
                        "in": "query",
                        "name": "tmplIds",
                        "description": "The tmplIds of wx",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/elastic/get": {
            "get": {
                "tags": [
                    "elastic"
                ],
                "description": "get elasticsearch web\n\u003cbr\u003e",
                "operationId": "ElasticController.get elasticsearch web",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetElastic"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Elastic not found"
                    }
                }
            }
        },
        "/elastic/search": {
            "get": {
                "tags": [
                    "elastic"
                ],
                "description": "get earch\n\u003cbr\u003e",
                "operationId": "ElasticController.get search",
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "description": "The query=",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "a",
                        "description": "The after...",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetSearch"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Search not found"
                    }
                }
            }
        },
        "/elastic/tika": {
            "post": {
                "tags": [
                    "elastic"
                ],
                "description": "post tika\n\u003cbr\u003e",
                "operationId": "ElasticController.post tika",
                "responses": {
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Tika not found"
                    }
                }
            }
        },
        "/elastic/upload/{id}": {
            "post": {
                "tags": [
                    "elastic"
                ],
                "description": "post file by BootstrapFileInput\n\u003cbr\u003e",
                "operationId": "ElasticController.post bootstrapfileinput",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "prodlabel",
                        "description": "The prodlabel",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "prodprincipal",
                        "description": "The prodprincipal",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/elastic/uploadelastic/{id}": {
            "get": {
                "tags": [
                    "elastic"
                ],
                "description": "get upload file to tika\u0026elastic html\n\u003cbr\u003e",
                "operationId": "ElasticController.upload file to tika\u0026elastic html",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Elastic"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Page not found"
                    }
                }
            }
        },
        "/fileinput/bootstrapfileinput": {
            "post": {
                "tags": [
                    "fileinput"
                ],
                "description": "post file by BootstrapFileInput\n\u003cbr\u003e",
                "operationId": "FileinputController.post bootstrapfileinput",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/flv/": {
            "get": {
                "tags": [
                    "flv"
                ],
                "description": "get admin page\n\u003cbr\u003e",
                "operationId": "FlvController.getFlv",
                "parameters": [
                    {
                        "in": "query",
                        "name": "filepath",
                        "description": "The mp4 file path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/flv/flvlist": {
            "get": {
                "tags": [
                    "flv"
                ],
                "description": "get admin page\n\u003cbr\u003e",
                "operationId": "FlvController.getFlv",
                "parameters": [
                    {
                        "in": "query",
                        "name": "xxl_sso_token",
                        "description": "The tokenText",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/freecad/freecad": {
            "get": {
                "tags": [
                    "freecad"
                ],
                "description": "get mathcad temples by keyword...\n\u003cbr\u003e",
                "operationId": "FreeCADController.get mathcad temples by keyword...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of mathtemples",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of mathtemples",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserTemple"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/freecad/freecaddata/{id}": {
            "get": {
                "tags": [
                    "freecad"
                ],
                "description": "get mathcad temples by keyword...\n\u003cbr\u003e",
                "operationId": "FreeCADController.get mathcad temples by keyword...",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserTemple"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/freecad/freecadmenu": {
            "get": {
                "tags": [
                    "freecad"
                ],
                "description": "get mathcad temples by keyword...\n\u003cbr\u003e",
                "operationId": "FreeCADController.get mathcad temples by keyword...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of mathtemples",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of mathtemples",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserTemple"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/freecad/getfreecad/{id}": {
            "get": {
                "tags": [
                    "freecad"
                ],
                "description": "get mathcad temples by keyword...\n\u003cbr\u003e",
                "operationId": "FreeCADController.get mathcad temples by keyword...",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserTemple"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/freecad/uploadmodel": {
            "get": {
                "tags": [
                    "freecad"
                ],
                "description": "get mathcad\n\u003cbr\u003e",
                "operationId": "FreeCADController.upload mathcadtemple",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetMathcadPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Page not found"
                    }
                }
            }
        },
        "/freecad/uploadmodelfile": {
            "post": {
                "tags": [
                    "freecad"
                ],
                "description": "post file by BootstrapFileInput\n\u003cbr\u003e",
                "operationId": "FreeCADController.post bootstrapfileinput",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/onlyoffice/commandbuilder": {
            "get": {
                "tags": [
                    "onlyoffice"
                ],
                "description": "get doc to onlyoffice CommandService\n\u003cbr\u003e",
                "operationId": "OnlyController.get CommandService builder doc",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/onlyoffice/commanddrop/{id}": {
            "get": {
                "tags": [
                    "onlyoffice"
                ],
                "description": "get doc to onlyoffice CommandService\n\u003cbr\u003e",
                "operationId": "OnlyController.get CommandService drop doc",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "description": "The key of doc",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/onlyoffice/commandinfo/{id}": {
            "get": {
                "tags": [
                    "onlyoffice"
                ],
                "description": "post doc to onlyoffice CommandService\n\u003cbr\u003e",
                "operationId": "OnlyController.post CommandService info doc",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of doc",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/onlyoffice/conversion": {
            "post": {
                "tags": [
                    "onlyoffice"
                ],
                "description": "post doc to onlyoffice conversion\n\u003cbr\u003e",
                "operationId": "OnlyController.post conversion doc",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/onlyoffice/downloadonlydoc": {
            "post": {
                "tags": [
                    "onlyoffice"
                ],
                "description": "post download onlydoc by id\n\u003cbr\u003e",
                "operationId": "OnlyController.post download onlydoc",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of onlydoc",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "description": "The url of onlyofficeserver",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/onlyoffice/downloadzip": {
            "post": {
                "tags": [
                    "onlyoffice"
                ],
                "description": "download zip\n\u003cbr\u003e",
                "operationId": "OnlyController.download zip",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "The ids of onlydoc",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Onlyoffice"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/onlyoffice/onlyoffice": {
            "get": {
                "tags": [
                    "onlyoffice"
                ],
                "description": "get onlyoffice\n\u003cbr\u003e",
                "operationId": "OnlyController.get onlyoffce",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of office",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Ollyoffice"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "office not found"
                    }
                }
            }
        },
        "/pdfcpu/addwatermarks/{id}": {
            "post": {
                "tags": [
                    "pdfcpu"
                ],
                "description": "post signature to pdf\n\u003cbr\u003e",
                "operationId": "PdfCpuController.post signature to pdf",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of pdf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "description": "The pageNumber of pdf",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "numPages",
                        "description": "The numPages of pdf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offsetdx",
                        "description": "The offsetdx of signature",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offsetdy",
                        "description": "The offsetdy of signature",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scale",
                        "description": "The scale of signature",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "image",
                        "description": "The base64 image of signature",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddSignature"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/pdfcpu/onlypdf/{id}": {
            "get": {
                "tags": [
                    "pdfcpu"
                ],
                "description": "get only pdf\n\u003cbr\u003e",
                "operationId": "PdfCpuController.get only pdf",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of pdf",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetOnlyPdf"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/pdfcpu/test/{id}": {
            "get": {
                "tags": [
                    "pdfcpu"
                ],
                "description": "get test\n\u003cbr\u003e",
                "operationId": "PdfCpuController.get test",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of test",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Gettest"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/project/getprojects": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get projectlist..\n\u003cbr\u003e",
                "operationId": "ProjController.get cms projectlist...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The id of project",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page of projectlist",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/getprojecttree/{id}": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get projecttree..\n\u003cbr\u003e",
                "operationId": "ProjController.get cms projecttree...",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of projecttree",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/getwxprojects": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get projectlist..\n\u003cbr\u003e",
                "operationId": "ProjController.get wx projectlist...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The id of project",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page of projectlist",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/product/addpermission": {
            "post": {
                "tags": [
                    "project"
                ],
                "description": "get Addpermission..\n\u003cbr\u003e",
                "operationId": "ProdController.get Addpermission...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "The id of attachment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/product/getpermission": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get Getpermission..\n\u003cbr\u003e",
                "operationId": "ProdController.get Getpermission...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "docid",
                        "description": "The id of attachment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/product/officeview/{id}": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get OfficeView..\n\u003cbr\u003e",
                "operationId": "ProdController.get OfficeView...",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of OfficeView",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/product/officeviewcallback": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get OfficeViewCallback..\n\u003cbr\u003e",
                "operationId": "ProdController.get OfficeViewCallback...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of attachment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/project/gettimeline/{id}": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get aproject time line\n\u003cbr\u003e",
                "operationId": "ProjController.get project time line",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllProjCalendar"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/project/project/products/{id}": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get projproducts..\n\u003cbr\u003e",
                "operationId": "ProdController.get projproducts...",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of projproducts",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchText",
                        "description": "The searchText of projproducts",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of projproducts",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/project/{id}/timeline": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get aproject time line\n\u003cbr\u003e",
                "operationId": "ProjController.get project time line",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllProjCalendar"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/project/projectuserrole": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get project user permission\n\u003cbr\u003e",
                "operationId": "ProjController.get project user permission",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pid",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProjectPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "project not found"
                    }
                }
            }
        },
        "/project/quickaddwxproject": {
            "post": {
                "tags": [
                    "project"
                ],
                "description": "post quickaddproject..\n\u003cbr\u003e",
                "operationId": "ProjController.post wx quickaddproject...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectcode",
                        "description": "The projectcode of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projecttitle",
                        "description": "The projecttitle of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tempprojid",
                        "description": "The tempprojid of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "istemppermission",
                        "description": "The permission of project",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/project/userprojecteditortree": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get user project editor tree\n\u003cbr\u003e",
                "operationId": "ProjController.get user project editor tree",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pid",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProjectPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "project not found"
                    }
                }
            }
        },
        "/project/userprojectpermission": {
            "get": {
                "tags": [
                    "project"
                ],
                "description": "get user project editor tree\n\u003cbr\u003e",
                "operationId": "ProjController.get user project editor tree",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pid",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProjectPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "project not found"
                    }
                }
            }
        },
        "/share/browse": {
            "get": {
                "tags": [
                    "share"
                ],
                "description": "get a share\n\u003cbr\u003e",
                "operationId": "ShareController.get a share",
                "parameters": [
                    {
                        "in": "query",
                        "name": "shareUuid",
                        "description": "The shareUuid of share",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "The code of share",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/share/create": {
            "post": {
                "tags": [
                    "share"
                ],
                "description": "post create a new share\n\u003cbr\u003e",
                "operationId": "ShareController.post create a new share",
                "parameters": [
                    {
                        "in": "query",
                        "name": "matterUuids",
                        "description": "The matterUuids of share",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "expireInfinity",
                        "description": "The xpireInfinity of share",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "expireTime",
                        "description": "The expireTime of share",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/share/detail/{id}": {
            "get": {
                "tags": [
                    "share"
                ],
                "description": "get a share\n\u003cbr\u003e",
                "operationId": "ShareController.get a share",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/share/download": {
            "post": {
                "tags": [
                    "share"
                ],
                "description": "download a share\n\u003cbr\u003e",
                "operationId": "ShareController.download a share",
                "parameters": [
                    {
                        "in": "query",
                        "name": "shareUuid",
                        "description": "The shareUuid of share",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "The code of share",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of attachment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Attachment"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/share/downloadzip": {
            "post": {
                "tags": [
                    "share"
                ],
                "description": "download a share\n\u003cbr\u003e",
                "operationId": "ShareController.download a share",
                "parameters": [
                    {
                        "in": "query",
                        "name": "shareUuid",
                        "description": "The shareUuid of share",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "The code of share",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Attachment"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/simwe/simansys": {
            "get": {
                "tags": [
                    "simwe"
                ],
                "description": "getsimansys\n\u003cbr\u003e",
                "operationId": "SimweController.get simansys",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/simwe/simwe": {
            "get": {
                "tags": [
                    "simwe"
                ],
                "description": "getsimwe\n\u003cbr\u003e",
                "operationId": "SimweController.get simwe",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/simwe/threejs": {
            "get": {
                "tags": [
                    "simwe"
                ],
                "description": "getthreejs\n\u003cbr\u003e",
                "operationId": "SimweController.get threejs",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/todo/create": {
            "post": {
                "tags": [
                    "todo"
                ],
                "description": "post todo\n\u003cbr\u003e",
                "operationId": "TodoController.post todo",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name for todo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of todo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/todo/deletetodo": {
            "post": {
                "tags": [
                    "todo"
                ],
                "description": "delete tolist\n\u003cbr\u003e",
                "operationId": "TodoController.delete todolist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "todoid",
                        "description": "The id of todo",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/todo/gettodo": {
            "get": {
                "tags": [
                    "todo"
                ],
                "description": "get tolist\n\u003cbr\u003e",
                "operationId": "TodoController.get todolist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of todo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of todo",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of todo",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/todo/updatetodo": {
            "post": {
                "tags": [
                    "todo"
                ],
                "description": "update tolist\n\u003cbr\u003e",
                "operationId": "TodoController.update todolist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "todoid",
                        "description": "The id of todo",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/addapplyrecharge/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "get user recharge\n\u003cbr\u003e",
                "operationId": "PayController.post user recharge",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "description": "The amount of money",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Recharge"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "recharge not found"
                    }
                }
            }
        },
        "/wx/addbusiness/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post business by projectid\n\u003cbr\u003e",
                "operationId": "BusinessController.post business by projectid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of release",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "description": "The location of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lat",
                        "description": "The lat of location",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "description": "The lng of location",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "startDate",
                        "description": "The startDate of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "endDate",
                        "description": "The endDate of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projecttitle",
                        "description": "The projecttitle of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "drivername",
                        "description": "The drivername   of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "subsidy",
                        "description": "The subsidy      of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "carfare",
                        "description": "The carfare      of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hotelfee",
                        "description": "The hotelfee     of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "description": "The users        of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "articleshow",
                        "description": "The larticleshow of business",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of article",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "articlecontent",
                        "description": "The content of article",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CreateBusiness"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pas not found"
                    }
                }
            }
        },
        "/wx/addlocationnavigate/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post locationnavigate by locationid\n\u003cbr\u003e",
                "operationId": "LocationController.post locationnavigate by locationid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "label",
                        "description": "The label of locationnavigate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "description": "The location of location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "The address of location",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lat",
                        "description": "The lat of location",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "description": "The lng of location",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The locationid of location",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CreateLocation"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pas not found"
                    }
                }
            }
        },
        "/wx/addlocationpart/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post location by projectid\n\u003cbr\u003e",
                "operationId": "LocationController.post location by projectid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of locationpart",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "describe",
                        "description": "The describe of locationpart",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "The sort of locationpart",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userid",
                        "description": "The userid of location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CreateLocation"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pas not found"
                    }
                }
            }
        },
        "/wx/adduser": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "add user\n\u003cbr\u003e",
                "operationId": "UserController.add user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The name of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nickname",
                        "description": "The nickname of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "The email of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "department",
                        "description": "The department of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "secoffice",
                        "description": "The secoffice of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ip",
                        "description": "The ip of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "port",
                        "description": "The port of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "The status of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "description": "The role of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/adduserpays": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post userpay by mathtempid\n\u003cbr\u003e",
                "operationId": "PayController.post userpay by mathtempleid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "usertempleid",
                        "description": "The id of mathtemple",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "description": "The amout of pays",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pay"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pas not found"
                    }
                }
            }
        },
        "/wx/adduserrecharge/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "get users recharge\n\u003cbr\u003e",
                "operationId": "PayController.post users recharge",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of recharge",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "description": "The amount of money",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Recharge"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "recharge not found"
                    }
                }
            }
        },
        "/wx/addwxarticle": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article by catalogid\n\u003cbr\u003e",
                "operationId": "ArticleController.post wx artile by catalogId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/addwxarticleflow/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article by catalogid\n\u003cbr\u003e",
                "operationId": "ArticleController.post wx artile by catalogId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The id of accesscontext",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "gid",
                        "description": "The id of group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/addwxarticles/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article by catalogid\n\u003cbr\u003e",
                "operationId": "ArticleController.post wx artile by catalogId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of article",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/addwxattachment": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post attachment by projectid\n\u003cbr\u003e",
                "operationId": "AttachController.post wx attachment by projectid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pid",
                        "description": "The projectid of attachment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "project not found"
                    }
                }
            }
        },
        "/wx/addwxdiary": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post diary by projectid\n\u003cbr\u003e",
                "operationId": "DiaryController.post wx diary by catalogId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "diarydate",
                        "description": "The diarydate of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "diaryactivity",
                        "description": "The diaryactivity of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "diaryweather",
                        "description": "The diaryweather of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddDiary"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Diary not found"
                    }
                }
            }
        },
        "/wx/addwxeditorarticle": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article by catalogid\n\u003cbr\u003e",
                "operationId": "ArticleController.post wx artile by catalogId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/addwxfinance/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post finance by projectid\n\u003cbr\u003e",
                "operationId": "FinanceController.post wx finance by catalogId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "description": "The amount of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "radio",
                        "description": "The radio of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "radio2",
                        "description": "The radio2 of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "financedate",
                        "description": "The financedate of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "financeactivity",
                        "description": "The financeactivity of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddFinance"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Finance not found"
                    }
                }
            }
        },
        "/wx/addwxlike/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post like by articleId\n\u003cbr\u003e",
                "operationId": "ReplyController.post wx like by articleId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of article",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddTopicLike"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/wx/addwxrelease/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post release by articleId\n\u003cbr\u003e",
                "operationId": "ReplyController.post wx release by articleId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of release",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "app_version",
                        "description": "the app_version of wx",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "avatar",
                        "description": "The avatar of release",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The username of release",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "publish_time",
                        "description": "The time of release",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddTopicReply"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/wx/addwxuser": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post user\n\u003cbr\u003e",
                "operationId": "UserController.post wx user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uname",
                        "description": "The username of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nickname",
                        "description": "The nickname of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The Password of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "The email of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "department",
                        "description": "The department of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "secoffice",
                        "description": "The secoffice of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddUser"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/addwxuserpays": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post userpay by articleid\n\u003cbr\u003e",
                "operationId": "PayController.post wx userpay by articleid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "articleid",
                        "description": "The id of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "description": "The amout of pays",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddUserPays"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pas not found"
                    }
                }
            }
        },
        "/wx/applyrecharge": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get user recharge\n\u003cbr\u003e",
                "operationId": "PayController.get user recharge",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Recharge"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "recharge not found"
                    }
                }
            }
        },
        "/wx/businesscheck": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post person\n\u003cbr\u003e",
                "operationId": "BusinessController.post checkin person",
                "parameters": [
                    {
                        "in": "query",
                        "name": "userid",
                        "description": "The userid for person",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "businessid",
                        "description": "The businessid for Business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lat",
                        "description": "The businessid of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "description": "The businessid of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "photoUrl",
                        "description": "The photoUrl of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The businessid of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The businessid of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "day",
                        "description": "The businessid of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "description": "The location of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthcheck/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthcheck2/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthcheck3/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthcheck4/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthcheck5/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of check",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthchecksum": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthchecksum2": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthchecksum3": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthchecksum4": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/businessmonthchecksum5": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get businessmonthcheck\n\u003cbr\u003e",
                "operationId": "BusinessController.get businessmothcheckin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/createphotodata": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get photo\n\u003cbr\u003e",
                "operationId": "PhotoController.get photo",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/wx/deleteuser": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "delete user\n\u003cbr\u003e",
                "operationId": "UserController.delete user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "The ids of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/deletewxarticle": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article by catalogid\n\u003cbr\u003e",
                "operationId": "ArticleController.post wx artile by articleId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of article",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/deletewxdiary": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post diary by catalogid\n\u003cbr\u003e",
                "operationId": "DiaryController.post wx diary by diaryId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of diary",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Adddiary"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/deletewxfinance": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post finance by catalogid\n\u003cbr\u003e",
                "operationId": "FinanceController.post wx finance by financeId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of finance",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Addfinance"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/deletewxrelease/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "delete release by releaseid\n\u003cbr\u003e",
                "operationId": "ReplyController.delete wx release by releaseid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of release",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteTopicReply"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/wx/downloadstandard/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get standardpdf by id\n\u003cbr\u003e",
                "operationId": "StandardController.dowload standardpdf",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of standardpdf",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/elasticsearch": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get earch\n\u003cbr\u003e",
                "operationId": "StandardController.get search",
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "description": "The query=",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "a",
                        "description": "The after...",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetSearch"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Search not found"
                    }
                }
            }
        },
        "/wx/getapplyrecharge": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get user recharge\n\u003cbr\u003e",
                "operationId": "PayController.get user recharge",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Recharge"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getapplyrechargedata": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get user rechargedata\n\u003cbr\u003e",
                "operationId": "PayController.get user rechargedata",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of recharges",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of recharges",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Recharge"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getbusiness/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get business by userid\n\u003cbr\u003e",
                "operationId": "BusinessController.get business by userid",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of business",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetBusinessPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "business not found"
                    }
                }
            }
        },
        "/wx/getbusinessbyid/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get business by businessid\n\u003cbr\u003e",
                "operationId": "BusinessController.get business by businessid",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of business",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetBusinessPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "business not found"
                    }
                }
            }
        },
        "/wx/getbusinesscheck": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get check\n\u003cbr\u003e",
                "operationId": "BusinessController.get checkin check",
                "parameters": [
                    {
                        "in": "query",
                        "name": "userid",
                        "description": "The userId of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "businessid",
                        "description": "The activityId of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "description": "The year of check",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "description": "The month of check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getelasticstandard": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get standard elasticsearch web\n\u003cbr\u003e",
                "operationId": "StandardController.get standard elasticsearch web",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetElastic"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Elastic not found"
                    }
                }
            }
        },
        "/wx/getlistarticles": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get articles by page\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx artiles list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for articles list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for articles list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getlocation/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get location by userid\n\u003cbr\u003e",
                "operationId": "LocationController.get location by userid",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of location",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetLocationPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "location not found"
                    }
                }
            }
        },
        "/wx/getlocationbyid/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get location by locationid\n\u003cbr\u003e",
                "operationId": "LocationController.get location by locationid",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of location",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetLocationPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "location not found"
                    }
                }
            }
        },
        "/wx/getmonthphotodata": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get photo\n\u003cbr\u003e",
                "operationId": "PhotoController.get photo",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for photos list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for photos list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/getmonthvideodata": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get video\n\u003cbr\u003e",
                "operationId": "VideoController.get video",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for video list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for video list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/getpay": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get pay by page\n\u003cbr\u003e",
                "operationId": "PayController.get pay list",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getpostdata": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "get Data(file)\n\u003cbr\u003e",
                "operationId": "MainController.get Data(file)",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getuserarticle": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userarticles by projid\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx userarticles count",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articles not found"
                    }
                }
            }
        },
        "/wx/getuserbyusername": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get user\n\u003cbr\u003e",
                "operationId": "UserController.get user",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/getusergetappreciations": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userappreciation by page\n\u003cbr\u003e",
                "operationId": "PayController.get userappreciations list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for myappreciation list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getusermoney": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get user money\n\u003cbr\u003e",
                "operationId": "PayController.get user money",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserMoney"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getuserpay": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get pay by page\n\u003cbr\u003e",
                "operationId": "PayController.get pay list",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getuserpayappreciations": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userappreciation by page\n\u003cbr\u003e",
                "operationId": "PayController.get userappreciations list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for myappreciation list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getuserpaylist": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userpay by page\n\u003cbr\u003e",
                "operationId": "PayController.get userpays list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for mymoney list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page of projproducts",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The size of page",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getuservideo/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get uservideolist\n\u003cbr\u003e",
                "operationId": "VideoController.get uservideolist",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchText",
                        "description": "The searchText of uservideo",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page for uservideo list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for uservideo list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Create"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "cart not found"
                    }
                }
            }
        },
        "/wx/getwxarticle/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get article by articleid\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx artile by articleId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/getwxarticleflow/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get article by articleid\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx artile by articleId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "docid",
                        "description": "The id of doc",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The id of accesscontext",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/getwxarticles": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get articles by page\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx artiles list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for articles list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for articles list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxarticless/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get articles by page\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx artiles list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for articles list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for articles list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxarticletype": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get articles by page\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx artiles list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for articles list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for articles list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dsid",
                        "description": "The id of docstate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acid",
                        "description": "The id of accesscontext",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxdiaries": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get diaries to doc\n\u003cbr\u003e",
                "operationId": "DiaryController.get wx diaries to doc",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for diaries list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for diaries list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxdiaries2/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get diaries by page\n\u003cbr\u003e",
                "operationId": "DiaryController.get wx diaries list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of diaries",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for diaries list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for diaries list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey for diary",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxdiary/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get diary by diaryid\n\u003cbr\u003e",
                "operationId": "DiaryController.get wx diary by diaryId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "skey",
                        "description": "The skey of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetDiary"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/getwxfinance/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get finance by financeid\n\u003cbr\u003e",
                "operationId": "FinanceController.get wx finance by financeId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "skey",
                        "description": "The skey of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetFinance"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/getwxfinance2/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get finance by page\n\u003cbr\u003e",
                "operationId": "FinanceController.get wx finance list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for finance list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for finance list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey for finance",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxfinancelist/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get finance by page\n\u003cbr\u003e",
                "operationId": "FinanceController.get wx finance list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for finance list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for finance list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey for finance",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxpay": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get pay by page\n\u003cbr\u003e",
                "operationId": "PayController.get wx pay list",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxpdf/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get wx pdf by id\n\u003cbr\u003e",
                "operationId": "AttachController.dowload wx pdf",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of pdf",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/getwxpdflist": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get pdf by page\n\u003cbr\u003e",
                "operationId": "SearchController.get wx pdf list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of pdf",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of pdf",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchpage",
                        "description": "The page for pdf list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/getwxuserarticles/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userarticles by projid\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx userarticles count",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articles not found"
                    }
                }
            }
        },
        "/wx/getwxusergetappreciations": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userappreciation by page\n\u003cbr\u003e",
                "operationId": "PayController.get wx userappreciations list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for myappreciation list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxusermoney": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get user money\n\u003cbr\u003e",
                "operationId": "PayController.get wx user money",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserMoney"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxuserpayappreciations": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userappreciation by page\n\u003cbr\u003e",
                "operationId": "PayController.get wx userappreciations list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for myappreciation list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/getwxuserpays": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get userpay by page\n\u003cbr\u003e",
                "operationId": "PayController.get wx userpays list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for mymoney list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/importusers": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "import users\n\u003cbr\u003e",
                "operationId": "UserController.import users",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/islogin": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get login..\n\u003cbr\u003e",
                "operationId": "LoginController.get user login...",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/wx/loginpost": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post login..\n\u003cbr\u003e",
                "operationId": "LoginController.post user login...",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uname",
                        "description": "The name of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pwd",
                        "description": "The password of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/wx/passlogin": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "post wx login\n\u003cbr\u003e",
                "operationId": "LoginController.post wx login",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/photo": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get photo\n\u003cbr\u003e",
                "operationId": "PhotoController.get photo",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for photos list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for photos list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/photo_back": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get photo\n\u003cbr\u003e",
                "operationId": "PhotoController.get photo",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/photodetail": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get photodetail\n\u003cbr\u003e",
                "operationId": "PhotoController.get photodetail",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/photodetail_back": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get photodetail\n\u003cbr\u003e",
                "operationId": "PhotoController.get photodetail",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/postdata": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post Data(file)\n\u003cbr\u003e",
                "operationId": "MainController.post Data(file)",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/project/product/pdf/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get documentdetail\n\u003cbr\u003e",
                "operationId": "AttachController.get wf document details",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dtid",
                        "description": "The id of doctype",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "docid",
                        "description": "The id of doc",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "data not found"
                    }
                }
            }
        },
        "/wx/search": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get standardlist\n\u003cbr\u003e",
                "operationId": "StandardController.get standardlist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "searchText",
                        "description": "The searchText of standard",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page for standard list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for standard list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Create"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "cart not found"
                    }
                }
            }
        },
        "/wx/searchproduct": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get allprojects' products search by page\n\u003cbr\u003e",
                "operationId": "SearchController.get allprojects' products search list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of products",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "productid",
                        "description": "The id of project",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "drawings not found"
                    }
                }
            }
        },
        "/wx/searchproductdata": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get all projects' products search by page\n\u003cbr\u003e",
                "operationId": "SearchController.get all projects' products search list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of products",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of products list",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page of products list",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "drawings not found"
                    }
                }
            }
        },
        "/wx/searchprojectproduct": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get a project's products search by page\n\u003cbr\u003e",
                "operationId": "SearchController.get a project's products search list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of products",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "productid",
                        "description": "The id of project",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "drawings not found"
                    }
                }
            }
        },
        "/wx/searchprojectproductdata": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get a project's products search by page\n\u003cbr\u003e",
                "operationId": "SearchController.get a project's products search list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of products",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The pageNo of drawings list",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of products list",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "productid",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "drawings not found"
                    }
                }
            }
        },
        "/wx/searchwxarticles/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get articles by page\n\u003cbr\u003e",
                "operationId": "ArticleController.get wx articles list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The projectid of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit for articles list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchpage",
                        "description": "The page for articles list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetArticles"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articles not found"
                    }
                }
            }
        },
        "/wx/searchwxdrawings": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get drawings by page\n\u003cbr\u003e",
                "operationId": "SearchController.get wx drawings list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of drawings",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of drawings",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchpage",
                        "description": "The page for drawings list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "drawings not found"
                    }
                }
            }
        },
        "/wx/searchwxproducts": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get drawings by page\n\u003cbr\u003e",
                "operationId": "SearchController.get wx drawings list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of drawings",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of drawings",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchpage",
                        "description": "The page for drawings list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "drawings not found"
                    }
                }
            }
        },
        "/wx/searchwxstandards": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get standards by page\n\u003cbr\u003e",
                "operationId": "StandardController.get wx standards list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of standards",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchpage",
                        "description": "The page for drawings list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "standards not found"
                    }
                }
            }
        },
        "/wx/ssologin": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get sso logintpl\n\u003cbr\u003e",
                "operationId": "LoginController.get sso login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "service",
                        "description": "The service of login",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/ssologinpost": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post sso login data\n\u003cbr\u003e",
                "operationId": "LoginController.post sso login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "login_name",
                        "description": "The name of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "service",
                        "description": "The service of location.href",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/standard/upload": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post file by BootstrapFileInput\n\u003cbr\u003e",
                "operationId": "StandardController.post bootstrapfileinput",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/wx/standardpdf": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get standardpdf\n\u003cbr\u003e",
                "operationId": "StandardController.get standardpdf",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Create"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "cart not found"
                    }
                }
            }
        },
        "/wx/tianditusearch": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get tianditu location\n\u003cbr\u003e",
                "operationId": "SupaMapusController.get tianditu location",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword of location",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "location not found"
                    }
                }
            }
        },
        "/wx/updatebusiness/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post update business by businessid\n\u003cbr\u003e",
                "operationId": "BusinessController.post update business by businessid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of release",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "description": "The location of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lat",
                        "description": "The lat of location",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "description": "The lng of location",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "startDate",
                        "description": "The startDate of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "endDate",
                        "description": "The endDate of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "projecttitle",
                        "description": "The projecttitle of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "drivername",
                        "description": "The drivername   of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "subsidy",
                        "description": "The subsidy      of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "carfare",
                        "description": "The carfare      of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hotelfee",
                        "description": "The hotelfee     of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "description": "The users        of business",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "articleshow",
                        "description": "The larticleshow of business",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of business",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of article",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "articlecontent",
                        "description": "The content of article",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBusiness"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pas not found"
                    }
                }
            }
        },
        "/wx/updateuser": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "add user\n\u003cbr\u003e",
                "operationId": "UserController.update user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pk",
                        "description": "The pk of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "value",
                        "description": "The value of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/updatewxdiary": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post diary by diaryid\n\u003cbr\u003e",
                "operationId": "DiaryController.post wx diary by diaryid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of diary",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of diary",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddDiary"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/updatewxeditorarticle": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article by articleid\n\u003cbr\u003e",
                "operationId": "ArticleController.post wx artile by articleid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skey",
                        "description": "The skey of user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/updatewxfinance": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post finance by financeid\n\u003cbr\u003e",
                "operationId": "FinanceController.post wx finance by financeid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "description": "The amount of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "radio",
                        "description": "The radio of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "radio2",
                        "description": "The radio2 of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "financedate",
                        "description": "The financedate of finance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of finance",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddFinance"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/updatewxuser": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post user password by uid\n\u003cbr\u003e",
                "operationId": "UserController.post wx userpassword by uid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "The id of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "oldpass",
                        "description": "The oldPassword of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "newpass",
                        "description": "The newpassword of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of wx",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AddArticle"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/uploadappreciationphoto": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post user avatar\n\u003cbr\u003e",
                "operationId": "FroalaController.post wx user avatar",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/uploadphoto": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "upload photo page\n\u003cbr\u003e",
                "operationId": "PhotoController.upload photo page",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UploadPhoto"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "photo not found"
                    }
                }
            }
        },
        "/wx/uploadphotodata": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post photo\n\u003cbr\u003e",
                "operationId": "PhotoController.post wx photo img",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "photo not found"
                    }
                }
            }
        },
        "/wx/uploadstandard": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get upload file to standard html\n\u003cbr\u003e",
                "operationId": "StandardController.upload file to standard html",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Elastic"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Page not found"
                    }
                }
            }
        },
        "/wx/uploadvideo": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "upload video\n\u003cbr\u003e",
                "operationId": "VideoController.upload videodata",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.uploadvideo"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "video not found"
                    }
                }
            }
        },
        "/wx/uploadvideodata": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post video\n\u003cbr\u003e",
                "operationId": "PhotoController.post wx video data",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "video not found"
                    }
                }
            }
        },
        "/wx/uploadwxavatar": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post user avatar\n\u003cbr\u003e",
                "operationId": "FroalaController.post wx user avatar",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/uploadwxeditorimg": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article img by catalogid\n\u003cbr\u003e",
                "operationId": "FroalaController.post wx artile img by catalogId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectid",
                        "description": "The projectid of wxeditor",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/uploadwximg": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article img by catalogid\n\u003cbr\u003e",
                "operationId": "FroalaController.post wx artile img by catalogId",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/uploadwximgs/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post article img by catalogid\n\u003cbr\u003e",
                "operationId": "FroalaController.post wx artile img by catalogId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/uploadwxvideo/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post video by catalogid\n\u003cbr\u003e",
                "operationId": "FroalaController.post wx video by catalogId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "desc",
                        "description": "The descript of video",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/wx/uploadwxvideocover/{id}": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post videoCover by videoid\n\u003cbr\u003e",
                "operationId": "FroalaController.post wx videoCover by videoid",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id of video",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "article not found"
                    }
                }
            }
        },
        "/wx/user/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get user by userid\n\u003cbr\u003e",
                "operationId": "UserController.get user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "description": "The role of user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchText",
                        "description": "The searchText of users",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNo",
                        "description": "The page for users list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for users list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/usermanage": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get usermanage\n\u003cbr\u003e",
                "operationId": "MainController.get usermanage",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/usermyself": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get usermyself\n\u003cbr\u003e",
                "operationId": "UserController.get usermyself",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/video": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get video\n\u003cbr\u003e",
                "operationId": "VideoController.get video",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The page for photos list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The limit of page for photos list",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/videodetail/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get videodetail\n\u003cbr\u003e",
                "operationId": "VideoController.get videodetail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of video",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetVideobyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/wxelasticsearch": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get earch\n\u003cbr\u003e",
                "operationId": "StandardController.get search",
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The query=",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "search_after",
                        "description": "paginated by earchpage...",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetSearch"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "Search not found"
                    }
                }
            }
        },
        "/wx/wxhassession": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get wx usersession\n\u003cbr\u003e",
                "operationId": "LoginController.get wx haslogin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/wxlogin/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "post wx login\n\u003cbr\u003e",
                "operationId": "LoginController.post wx login",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "code",
                        "description": "The jscode of wxuser",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/success"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/wxpdf/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get wx pdf by id\n\u003cbr\u003e",
                "operationId": "AttachController.dowload wx pdf",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of pdf",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        },
        "/wx/wxregion": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post wx region\n\u003cbr\u003e",
                "operationId": "RegistController.post wx region",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uname",
                        "description": "The username of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password of account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "The code of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "app_version",
                        "description": "The app_version of wx",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SaveUser"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/wxregist": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post wx regist\n\u003cbr\u003e",
                "operationId": "RegistController.post wx regist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uname",
                        "description": "The username of ueser",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password of account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "The code of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "app_version",
                        "description": "The app_version of wx",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SaveUser"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/wx/wxstandardpdf/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get wx standardpdf by id\n\u003cbr\u003e",
                "operationId": "StandardController.dowload wx standardpdf",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of standardpdf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetAttachbyId"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "pdf not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "SUCCESS": {
            "title": "SUCCESS",
            "type": "object"
        },
        "gorm.DeletedAt": {
            "title": "DeletedAt",
            "type": "object"
        },
        "gorm.Model": {
            "title": "Model",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "DeletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.AddAdminCategory": {
            "title": "AddAdminCategory",
            "type": "object"
        },
        "models.AddArticle": {
            "title": "AddArticle",
            "type": "object"
        },
        "models.AddDiary": {
            "title": "AddDiary",
            "type": "object"
        },
        "models.AddFinance": {
            "title": "AddFinance",
            "type": "object"
        },
        "models.AddSignature": {
            "title": "AddSignature",
            "type": "object"
        },
        "models.AddTopicLike": {
            "title": "AddTopicLike",
            "type": "object"
        },
        "models.AddTopicReply": {
            "title": "AddTopicReply",
            "type": "object"
        },
        "models.AddUser": {
            "title": "AddUser",
            "type": "object"
        },
        "models.AddUserPays": {
            "title": "AddUserPays",
            "type": "object"
        },
        "models.Adddiary": {
            "title": "Adddiary",
            "type": "object"
        },
        "models.Addfinance": {
            "title": "Addfinance",
            "type": "object"
        },
        "models.Article": {
            "title": "Article",
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string",
                    "format": "datetime"
                },
                "ProductId": {
                    "type": "integer",
                    "format": "int64"
                },
                "Subtext": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string",
                    "format": "datetime"
                },
                "Views": {
                    "type": "integer",
                    "format": "int64"
                },
                "html": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Attachment": {
            "title": "Attachment",
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string",
                    "format": "datetime"
                },
                "Downloads": {
                    "type": "integer",
                    "format": "int64"
                },
                "FileName": {
                    "type": "string"
                },
                "FileSize": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProductId": {
                    "type": "integer",
                    "format": "int64"
                },
                "Updated": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Avatar": {
            "title": "Avatar",
            "type": "object"
        },
        "models.Create": {
            "title": "Create",
            "type": "object"
        },
        "models.CreateBusiness": {
            "title": "CreateBusiness",
            "type": "object"
        },
        "models.CreateLocation": {
            "title": "CreateLocation",
            "type": "object"
        },
        "models.DeleteTopicReply": {
            "title": "DeleteTopicReply",
            "type": "object"
        },
        "models.DeleteUserCart": {
            "title": "DeleteUserCart",
            "type": "object"
        },
        "models.Elastic": {
            "title": "Elastic",
            "type": "object"
        },
        "models.GetAdminCategory": {
            "title": "GetAdminCategory",
            "type": "object"
        },
        "models.GetAllProjCalendar": {
            "title": "GetAllProjCalendar",
            "type": "object"
        },
        "models.GetArticle": {
            "title": "GetArticle",
            "type": "object"
        },
        "models.GetArticles": {
            "title": "GetArticles",
            "type": "object"
        },
        "models.GetAttachbyId": {
            "title": "GetAttachbyId",
            "type": "object"
        },
        "models.GetBusinessPage": {
            "title": "GetBusinessPage",
            "type": "object"
        },
        "models.GetChat": {
            "title": "GetChat",
            "type": "object"
        },
        "models.GetDiary": {
            "title": "GetDiary",
            "type": "object"
        },
        "models.GetElastic": {
            "title": "GetElastic",
            "type": "object"
        },
        "models.GetFinance": {
            "title": "GetFinance",
            "type": "object"
        },
        "models.GetLocationPage": {
            "title": "GetLocationPage",
            "type": "object"
        },
        "models.GetMathcadPage": {
            "title": "GetMathcadPage",
            "type": "object"
        },
        "models.GetOnlyPdf": {
            "title": "GetOnlyPdf",
            "type": "object"
        },
        "models.GetProductsPage": {
            "title": "GetProductsPage",
            "type": "object"
        },
        "models.GetProjectPage": {
            "title": "GetProjectPage",
            "type": "object"
        },
        "models.GetSearch": {
            "title": "GetSearch",
            "type": "object"
        },
        "models.GetUserMoney": {
            "title": "GetUserMoney",
            "type": "object"
        },
        "models.GetVideobyId": {
            "title": "GetVideobyId",
            "type": "object"
        },
        "models.Gettest": {
            "title": "Gettest",
            "type": "object"
        },
        "models.MathArticle": {
            "title": "MathArticle",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "DeletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserTempleID": {
                    "type": "integer",
                    "format": "int32"
                },
                "html": {
                    "type": "string"
                },
                "subtext": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Ollyoffice": {
            "title": "Ollyoffice",
            "type": "object"
        },
        "models.Onlyoffice": {
            "title": "Onlyoffice",
            "type": "object"
        },
        "models.Pay": {
            "title": "Pay",
            "type": "object",
            "properties": {
                "Amount": {
                    "type": "integer",
                    "format": "int64"
                },
                "Article": {
                    "$ref": "#/definitions/models.Article"
                },
                "ArticleID": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "DeletedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "User": {
                    "$ref": "#/definitions/models.User",
                    "description": "这个外键难道不是错的么？应该是UserID?没错，因为column:user_id"
                },
                "User2ID": {
                    "type": "integer",
                    "format": "int64"
                },
                "UserID": {
                    "description": "One-To-One (属于 - 本表的BillingAddressID作外键",
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.Recharge": {
            "title": "Recharge",
            "type": "object",
            "properties": {
                "Amount": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "DeletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "User": {
                    "$ref": "#/definitions/models.User"
                },
                "UserID": {
                    "description": "外键 (属于), tag `index`是为该列创建索引",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.SaveUser": {
            "title": "SaveUser",
            "type": "object"
        },
        "models.Update": {
            "title": "Update",
            "type": "object"
        },
        "models.UpdateBusiness": {
            "title": "UpdateBusiness",
            "type": "object"
        },
        "models.UploadPhoto": {
            "title": "UploadPhoto",
            "type": "object"
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "Createtime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Department": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Ip": {
                    "type": "string"
                },
                "IsPartyMember": {
                    "type": "boolean"
                },
                "Lastlogintime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Nickname": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "Port": {
                    "type": "string"
                },
                "Remark": {
                    "type": "string"
                },
                "Repassword": {
                    "type": "string"
                },
                "Secoffice": {
                    "type": "string"
                },
                "Sex": {
                    "type": "string"
                },
                "Status": {
                    "type": "integer",
                    "format": "int64"
                },
                "Updated": {
                    "type": "string",
                    "format": "datetime"
                },
                "name": {
                    "description": "这个拼音的简写",
                    "type": "string"
                },
                "role": {
                    "description": "这个不是角色，这个无意义",
                    "type": "string"
                }
            }
        },
        "models.UserTemple": {
            "title": "UserTemple",
            "type": "object",
            "properties": {
                "Article": {
                    "$ref": "#/definitions/models.MathArticle"
                },
                "ClassID": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "DeletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "User": {
                    "$ref": "#/definitions/models.User"
                },
                "UserID": {
                    "description": "外键 (属于), tag `index`是为该列创建索引",
                    "type": "integer",
                    "format": "int64"
                },
                "number": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "titleb": {
                    "description": "简要名称，无日期，无版本号，无扩展名",
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.uploadvideo": {
            "title": "uploadvideo",
            "type": "object"
        },
        "success": {
            "title": "success",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "admin",
            "description": "VueFlow API\n"
        },
        {
            "name": "wx",
            "description": "CMSWX article API\n"
        },
        {
            "name": "adminlog",
            "description": "CMSADMIN API\n"
        },
        {
            "name": "checkin",
            "description": "CMSCHECKIN API\n"
        },
        {
            "name": "bbs",
            "description": "CMSBBS API\n"
        },
        {
            "name": "todo",
            "description": "CMSTODO API\n"
        },
        {
            "name": "fileinput",
            "description": "CMSWX froala API\n"
        },
        {
            "name": "pdfcpu",
            "description": "CMSADMIN API\n"
        },
        {
            "name": "flv",
            "description": "CMSFLV API\n"
        },
        {
            "name": "elastic",
            "description": "CMSELASTIC API\n"
        },
        {
            "name": "simwe",
            "description": "CMSSIMWE API\n"
        }
    ]
}